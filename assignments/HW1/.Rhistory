grid.points <- seq(0, 1, length.out = m)
# Define the prior distribution:
triangle.prior <- function(theta){
if(theta >= 0 && theta < 0.25){
return (8 * theta)
}
else if(theta >= 0.25 && theta <= 1){
return (8 * (1 - theta) / 3)
}
else return (0)
}
# Define the unnormalized posterior distribution:
unnorm.posterior <- function(theta, n, y){
posterior <- (theta^y) * (1 - theta)^(n - y) * triangle.prior(theta)
return (posterior)
}
# Grid approximation:
m <- 100
grid.points <- seq(0, 1, length.out = m)
unnorm.posterior(grid.points, 500, 285)
# Define the prior distribution:
triangle.prior <- function(theta){
if(theta >= 0 && theta < 0.25){
return (8 * theta)
}
else if(theta >= 0.25 && theta <= 1){
return (8 * (1 - theta) / 3)
}
else return (0)
}
# Define the unnormalized posterior distribution:
unnorm.posterior <- function(theta, n, y){
posterior <- (theta^y) * (1 - theta)^(n - y) * triangle.prior(theta)
return (posterior)
}
# Grid approximation:
m <- 100
grid.points <- seq(0, 1, length.out = m)
grid.points
unnorm.posterior(grid.points, 500, 285)
# Normalized constant:
c <- sum(unnorm.posterior / m)
# Define the prior distribution:
triangle.prior <- function(theta){
if(theta >= 0 && theta < 0.25){
return (8 * theta)
}
else if(theta >= 0.25 && theta <= 1){
return (8 * (1 - theta) / 3)
}
else return (0)
}
# Define the unnormalized posterior distribution:
unnorm.posterior <- function(theta, n, y){
posterior <- (theta^y) * (1 - theta)^(n - y) * triangle.prior(theta)
return (posterior)
}
# Grid approximation for unnormalized posteriors:
m <- 100
grid.points <- seq(0, 1, length.out = m)
unnorm.points = unnorm.posterior(grid.points, 500, 285)
unnorm.points
# Normalized constant:
c <- sum(unnorm.points / m)
norm.posterior <- unnorm.points / c
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.posterior, type = 'l', col = 'red')
# Normalized constant:
c <- sum(unnorm.points / m)
norm.posterior <- unnorm.points / c
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.posterior, type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
# Normalized constant:
c <- sum(unnorm.points / m)
norm.posterior <- unnorm.points / c
norm.posterior
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.posterior, type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points, type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points)
hist(mysamples, freq = FALSE)
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points)
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling of theta')
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points/sum(norm.points), type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/sum(norm.points), col = "red")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
sd(mysamples_v2)
xseq
xseq[2]-xseq[1])
xseq[2]-xseq[1]
(sum(yseq) * (xseq[2]-xseq[1]))
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/sum(norm.points)), col = "red")
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
sd(mysamples_v2)
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
mysamples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(mysamples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points/sum(norm.points), type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
sum(norm.points)
mysamples <- rnorm(100000, mean = 1, sd = 2)
hist(mysamples, freq = FALSE)
xseq <- seq(-4, 6, length.out = 200)
yseq <- dnorm(xseq, mean = 1, sd = 2)
lines(xseq, yseq, col = "red")
mean(mysamples)
sd(mysamples)
posterior_interval <- quantile(mysamples, c(0.025, 0.975))
abline(v = posterior_interval[1], col = "green")
abline(v = posterior_interval[2], col = "green")
abline(v = mean(mysamples), col = "magenta")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
set.seed(12345)
N = 10000
samples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
samples
hist(samples, freq = FALSE)
samples <- sample(grid.points, size = N, replace = T, prob = norm.points/100)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
set.seed(12345)
N = 10000
samples <- sample(grid.points, size = N, replace = T, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
mysamples_v2 <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
hist(mysamples_v2, freq = FALSE)
mysamples_v2 <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(mysamples_v2, freq = FALSE)
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points, col = "red")
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points/sum(norm.points), type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
mysamples <- rnorm(100000, mean = 1, sd = 2)
hist(mysamples, freq = FALSE)
xseq <- seq(-4, 6, length.out = 200)
yseq <- dnorm(xseq, mean = 1, sd = 2)
lines(xseq, yseq, col = "red")
mean(mysamples)
sd(mysamples)
posterior_interval <- quantile(mysamples, c(0.025, 0.975))
abline(v = posterior_interval[1], col = "green")
abline(v = posterior_interval[2], col = "green")
abline(v = mean(mysamples), col = "magenta")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
sd(mysamples_v2)
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, ylim = c(0, 1), xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, ylim = c(0, 1), xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/100)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
norm.points/sum(norm.points)
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = FALSE prob = norm.points/sum(norm.points))
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = FALSE, prob = norm.points/sum(norm.points))
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points)), col = "red")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, xlab = 'theta', main = 'Histogram of sampling theta', prob=TRUE)
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
sum(hst$density*diff(hst$breaks))
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hst <- hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
sum(hst$density*diff(hst$breaks))
set.seed(12345)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hst <- hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
set.seed(123456789)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points/(sum(norm.points) * (grid.points[2]-grid.points[1])), col = "red")
sum(ysea)
sum(yseq)
mysamples <- rnorm(100000, mean = 1, sd = 2)
hist(mysamples, freq = FALSE)
xseq <- seq(-4, 6, length.out = 200)
yseq <- dnorm(xseq, mean = 1, sd = 2)
lines(xseq, yseq, col = "red")
mean(mysamples)
sd(mysamples)
posterior_interval <- quantile(mysamples, c(0.025, 0.975))
abline(v = posterior_interval[1], col = "green")
abline(v = posterior_interval[2], col = "green")
abline(v = mean(mysamples), col = "magenta")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
sd(mysamples_v2)
quantile(mysamples_v2, c(0.025, 0.975))
sum(yseq)
sum(norm.points)
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points/sum(norm.points), type = 'l', col = 'red', xlab = 'theta', ylab = 'normalized posterior density', main = 'Normalized posterior density function')
set.seed(123456789)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points/sum(norm.points))
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points, col = "red")
set.seed(123456789)
N = 10000
samples <- sample(grid.points, N, replace = TRUE, prob = norm.points)
hist(samples, freq = FALSE, xlab = 'theta', main = 'Histogram of sampling theta')
lines(grid.points, norm.points, col = "red")
xseq <- seq(-6, 6, length.out = 1000)
yseq <- exp(-(xseq)^4)
plot(xseq, yseq, type= "l")
mysamples_v2 <- sample(xseq, 200000, replace = TRUE, prob = yseq/sum(yseq))
hist(mysamples_v2, freq = FALSE, ylim = c(0, 1), xlim = c(-6, 6))
lines(xseq, yseq/(sum(yseq) * (xseq[2]-xseq[1])), col = "red")
mean(mysamples_v2)
sd(mysamples_v2)
quantile(mysamples_v2, c(0.025, 0.975))
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points, type = 'l', col = 'red',
xlab = 'theta', ylab = 'normalized posterior density',
main = 'Normalized posterior density function')
# Normalized constant:
c <- sum(unnorm.points / m)
norm.points <- unnorm.points / c
norm.points
# Plot the normalized posterior density function:
plot(x = grid.points, y = norm.points, type = 'l', col = 'red',
xlab = 'theta', ylab = 'normalized posterior density',
main = 'Normalized posterior density function')
#1 plot
density_y<-function(){
a<-rnorm(1,1,2)
b<-rnorm(1,2,2)
return((a+b)/2)
}
dat<-replicate(1000,density_y())
plot(density(dat),main="p(y)")
ms<-rnorm(100,1,2)
hist(ms,freq=FALSE)
#1 plot
density_y<-function(){
a<-rnorm(1,1,2)
b<-rnorm(1,2,2)
return((a+b)/2)
}
dat<-replicate(1000,density_y())
plot(density(dat),main="p(y)")
ms<-rnorm(100,1,2)
hist(ms,freq=FALSE)
xseq<-seq(-4,6,length.out = 200)
yseq<-dnorm(xseq,1,2)
lines(xseq,yseq,col="red")
posterior_interval<-quantile(c(0.025,0.975),ms)
abline(v=posterior_interval[1],col="green")
ms<-rnorm(100,1,2)
hist(ms,freq=FALSE)
xseq<-seq(-4,6,length.out = 200)
yseq<-dnorm(xseq,1,2)
lines(xseq,yseq,col="red")
posterior_interval<-quantile(c(0.025,0.975),ms)
abline(v=posterior_interval[1],col="green")
abline(v=posterior_interval[2],col="green")
abline(v=mean(ms),col="magenta")
xseq<-seq(-6,6,length.out = 1000)
yseq<-exp(-(xseq)^4)
plot(xseq,yseq,type="l")
ms_v2<-sample(xseq,20000,replace = TRUE,prob = yseq)
hist(ms_v2,freq = FALSE,ylim = c(0,1))
lines(xseq,yseq/(sum(yseq)*(xseq[2]-xseq[1])),col="red")
quantile(ms_v2,c(0.025,0.975))
# problem 3
xseq<-seq(0,1,length.out = 1000)
p_theta<-function(theta){
if(theta>=0&theta<0.25){
p<-8*theta
}else if(theta>=0.25&theta<=1){
p<-8/3-8/3*theta
}else {
p<-0
}
return(p)
}
p_u<-function(y,theta){
dis<-c()
for (i in 1:length(xseq)) {
dis[i]<-p_theta(xseq[i])*xseq[i]^y*(1-xseq[i])^(500-y)
}
return(dis)
}
y<-285
post_unnomdis<-p_u(y,xseq)
post_nomdis<-post_unnomdis/(0.001*sum(post_unnomdis))
plot(xseq,post_nomdis,type="l",xlab="theta",ylab="normalized_posterior",col="red")
my_sample<-sample(xseq,20000,replace = TRUE,0.001*post_nomdis)
hist(my_sample,freq=FALSE,ylim = c(0,20))
lines(xseq,post_nomdis/sum(0.001*post_nomdis),col="red")
#2 quantile
ms1_10<-rnorm(1000,150.73,6.25)
quantile(ms1_10,c(0.025,0.975))
ms2_10<-rnorm(1000,150.73,20.95)
quantile(ms2_10,c(0.025,0.975))
ms1_100<-rnorm(1000,150.07,1.997)
quantile(ms1_100,c(0.025,0.975))
ms2_100<-rnorm(1000,150.07,20.1)
mean_y <- function(n) {
result <- (600 * n + 180) / (4*n + 1)
return(result)
}
variance_y <- function(n){
result <- (1600 * n + 2000) / (4 * n + 1)
return (result)
}
n1 <- 10
mysamples_1 <- rnorm(1000, mean = mean_y(n1), sd = sqrt(variance_y(n1)))
print("The 95% posterior interval for y_pre when n = 10 is: ")
quantile(mysamples_1, c(0.025, 0.975))
n2 <- 100
mysamples_2 <- rnorm(1000, mean = mean_y(n2), sd = sqrt(variance_y(n2)))
print("The 95% posterior interval for y_pre when n = 100 is: ")
quantile(mysamples_2, c(0.025, 0.975))
#2 quantile
ms1_10<-rnorm(1000,150.73,6.25)
quantile(ms1_10,c(0.025,0.975))
ms2_10<-rnorm(1000,150.73,20.95)
quantile(ms2_10,c(0.025,0.975))
ms1_100<-rnorm(1000,150.07,1.997)
quantile(ms1_100,c(0.025,0.975))
ms2_100<-rnorm(1000,150.07,20.1)
quantile(ms2_100,c(0.025,0.975))
#2 quantile
ms1_10<-rnorm(1000,150.73,6.25)
quantile(ms1_10,c(0.025,0.975))
ms2_10<-rnorm(1000,150.73,20.95)
quantile(ms2_10,c(0.025,0.975))
ms1_100<-rnorm(1000,150.07,1.997)
quantile(ms1_100,c(0.025,0.975))
ms2_100<-rnorm(1000,150.07,20.1)
quantile(ms2_100,c(0.025,0.975))
